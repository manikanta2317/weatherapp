{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manik\\\\Downloads\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weatherIcons = {\n  0: '☀️',\n  // Clear sky\n  1: '🌤️',\n  // Mainly clear\n  2: '⛅',\n  // Partly cloudy\n  3: '☁️',\n  // Overcast\n  45: '🌫️',\n  // Fog\n  48: '🌫️',\n  // Depositing rime fog\n  51: '🌦️',\n  // Light drizzle\n  53: '🌦️',\n  // Moderate drizzle\n  55: '🌧️',\n  // Dense drizzle\n  56: '🌦️',\n  // Light freezing drizzle\n  57: '🌧️',\n  // Dense freezing drizzle\n  61: '🌧️',\n  // Slight rain\n  63: '🌧️',\n  // Moderate rain\n  65: '🌧️',\n  // Heavy rain\n  66: '🌧️',\n  // Light freezing rain\n  67: '🌧️',\n  // Heavy freezing rain\n  71: '❄️',\n  // Slight snow fall\n  73: '❄️',\n  // Moderate snow fall\n  75: '❄️',\n  // Heavy snow fall\n  77: '❄️',\n  // Snow grains\n  80: '🌧️',\n  // Rain showers: slight\n  81: '🌧️',\n  // Rain showers: moderate\n  82: '🌧️',\n  // Rain showers: violent\n  85: '❄️',\n  // Snow showers: slight\n  86: '❄️',\n  // Snow showers: heavy\n  95: '⛈️',\n  // Thunderstorm: slight or moderate\n  96: '⛈️',\n  // Thunderstorm with slight hail\n  99: '⛈️' // Thunderstorm with heavy hail\n};\nfunction App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState([]);\n  const [cityName, setCityName] = useState('');\n  const fetchWeather = async (lat, lon, name = '') => {\n    const url = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current_weather=true&daily=temperature_2m_max,temperature_2m_min,weathercode&timezone=auto`;\n    const res = await fetch(url);\n    const data = await res.json();\n    setWeather(data.current_weather);\n    setForecast(data.daily);\n    setCityName(name);\n  };\n  const handleSearch = async () => {\n    if (!city) return;\n    const geoUrl = `https://geocoding-api.open-meteo.com/v1/search?name=${city}&count=1`;\n    const res = await fetch(geoUrl);\n    const data = await res.json();\n    if (data.results && data.results.length > 0) {\n      const {\n        latitude,\n        longitude,\n        name\n      } = data.results[0];\n      fetchWeather(latitude, longitude, name);\n    }\n  };\n  const handleCurrentLocation = () => {\n    navigator.geolocation.getCurrentPosition(pos => {\n      fetchWeather(pos.coords.latitude, pos.coords.longitude, 'My Location');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF24 Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCurrentLocation,\n        children: \"\\uD83D\\uDCCD My Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Current Weather \", cityName && `in ${cityName}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '2rem'\n        },\n        children: weatherIcons[weather.weathercode] || '❔'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Windspeed: \", weather.windspeed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), forecast.time && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"5-Day Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-container\",\n        children: forecast.time.slice(1, 6).map((day, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '1.5rem'\n            },\n            children: weatherIcons[forecast.weathercode[idx + 1]] || '❔'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [forecast.temperature_2m_min[idx + 1], \"\\xB0C / \", forecast.temperature_2m_max[idx + 1], \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4L5yFV17re3qW6kRt6JBMW+P1yM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","weatherIcons","App","_s","city","setCity","weather","setWeather","forecast","setForecast","cityName","setCityName","fetchWeather","lat","lon","name","url","res","fetch","data","json","current_weather","daily","handleSearch","geoUrl","results","length","latitude","longitude","handleCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","fontSize","weathercode","temperature","windspeed","time","slice","map","day","idx","temperature_2m_min","temperature_2m_max","_c","$RefreshReg$"],"sources":["C:/Users/manik/Downloads/weather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst weatherIcons = {\n  0: '☀️',   // Clear sky\n  1: '🌤️',  // Mainly clear\n  2: '⛅',   // Partly cloudy\n  3: '☁️',   // Overcast\n  45: '🌫️',  // Fog\n  48: '🌫️',  // Depositing rime fog\n  51: '🌦️',  // Light drizzle\n  53: '🌦️',  // Moderate drizzle\n  55: '🌧️',  // Dense drizzle\n  56: '🌦️',  // Light freezing drizzle\n  57: '🌧️',  // Dense freezing drizzle\n  61: '🌧️',  // Slight rain\n  63: '🌧️',  // Moderate rain\n  65: '🌧️',  // Heavy rain\n  66: '🌧️',  // Light freezing rain\n  67: '🌧️',  // Heavy freezing rain\n  71: '❄️',  // Slight snow fall\n  73: '❄️',  // Moderate snow fall\n  75: '❄️',  // Heavy snow fall\n  77: '❄️',  // Snow grains\n  80: '🌧️',  // Rain showers: slight\n  81: '🌧️',  // Rain showers: moderate\n  82: '🌧️',  // Rain showers: violent\n  85: '❄️',  // Snow showers: slight\n  86: '❄️',  // Snow showers: heavy\n  95: '⛈️',  // Thunderstorm: slight or moderate\n  96: '⛈️',  // Thunderstorm with slight hail\n  99: '⛈️'   // Thunderstorm with heavy hail\n};\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState([]);\n  const [cityName, setCityName] = useState('');\n\n  const fetchWeather = async (lat, lon, name = '') => {\n    const url = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current_weather=true&daily=temperature_2m_max,temperature_2m_min,weathercode&timezone=auto`;\n    const res = await fetch(url);\n    const data = await res.json();\n    setWeather(data.current_weather);\n    setForecast(data.daily);\n    setCityName(name);\n  };\n\n  const handleSearch = async () => {\n    if (!city) return;\n    const geoUrl = `https://geocoding-api.open-meteo.com/v1/search?name=${city}&count=1`;\n    const res = await fetch(geoUrl);\n    const data = await res.json();\n    if (data.results && data.results.length > 0) {\n      const { latitude, longitude, name } = data.results[0];\n      fetchWeather(latitude, longitude, name);\n    }\n  };\n\n  const handleCurrentLocation = () => {\n    navigator.geolocation.getCurrentPosition((pos) => {\n      fetchWeather(pos.coords.latitude, pos.coords.longitude, 'My Location');\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>🌤 Weather App</h1>\n      <div>\n        <input \n          type=\"text\" \n          placeholder=\"Enter city\" \n          value={city} \n          onChange={(e) => setCity(e.target.value)} \n        />\n        <button onClick={handleSearch}>Search</button>\n        <button onClick={handleCurrentLocation}>📍 My Location</button>\n      </div>\n\n      {weather && (\n        <div className=\"weather-card\">\n          <h2>Current Weather {cityName && `in ${cityName}`}</h2>\n          <div style={{ fontSize: '2rem' }}>\n            {weatherIcons[weather.weathercode] || '❔'}\n          </div>\n          <p>Temperature: {weather.temperature}°C</p>\n          <p>Windspeed: {weather.windspeed} km/h</p>\n        </div>\n      )}\n\n      {forecast.time && (\n        <div>\n          <h2>5-Day Forecast</h2>\n          <div className=\"forecast-container\">\n            {forecast.time.slice(1, 6).map((day, idx) => (\n              <div key={day} className=\"forecast-card\">\n                <p>{day}</p>\n                <div style={{ fontSize: '1.5rem' }}>\n                  {weatherIcons[forecast.weathercode[idx + 1]] || '❔'}\n                </div>\n                <p>\n                  {forecast.temperature_2m_min[idx + 1]}°C / {forecast.temperature_2m_max[idx + 1]}°C\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAG;EACnB,CAAC,EAAE,IAAI;EAAI;EACX,CAAC,EAAE,KAAK;EAAG;EACX,CAAC,EAAE,GAAG;EAAI;EACV,CAAC,EAAE,IAAI;EAAI;EACX,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,IAAI;EAAG;EACX,EAAE,EAAE,IAAI;EAAG;EACX,EAAE,EAAE,IAAI;EAAG;EACX,EAAE,EAAE,IAAI;EAAG;EACX,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,KAAK;EAAG;EACZ,EAAE,EAAE,IAAI;EAAG;EACX,EAAE,EAAE,IAAI;EAAG;EACX,EAAE,EAAE,IAAI;EAAG;EACX,EAAE,EAAE,IAAI;EAAG;EACX,EAAE,EAAE,IAAI,CAAG;AACb,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,YAAY,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI,GAAG,EAAE,KAAK;IAClD,MAAMC,GAAG,GAAG,mDAAmDH,GAAG,cAAcC,GAAG,6FAA6F;IAChL,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IAC5B,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7Bb,UAAU,CAACY,IAAI,CAACE,eAAe,CAAC;IAChCZ,WAAW,CAACU,IAAI,CAACG,KAAK,CAAC;IACvBX,WAAW,CAACI,IAAI,CAAC;EACnB,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACnB,IAAI,EAAE;IACX,MAAMoB,MAAM,GAAG,uDAAuDpB,IAAI,UAAU;IACpF,MAAMa,GAAG,GAAG,MAAMC,KAAK,CAACM,MAAM,CAAC;IAC/B,MAAML,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7B,IAAID,IAAI,CAACM,OAAO,IAAIN,IAAI,CAACM,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3C,MAAM;QAAEC,QAAQ;QAAEC,SAAS;QAAEb;MAAK,CAAC,GAAGI,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC;MACrDb,YAAY,CAACe,QAAQ,EAAEC,SAAS,EAAEb,IAAI,CAAC;IACzC;EACF,CAAC;EAED,MAAMc,qBAAqB,GAAGA,CAAA,KAAM;IAClCC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,GAAG,IAAK;MAChDrB,YAAY,CAACqB,GAAG,CAACC,MAAM,CAACP,QAAQ,EAAEM,GAAG,CAACC,MAAM,CAACN,SAAS,EAAE,aAAa,CAAC;IACxE,CAAC,CAAC;EACJ,CAAC;EAED,oBACE5B,OAAA;IAAKmC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpC,OAAA;MAAAoC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBxC,OAAA;MAAAoC,QAAA,gBACEpC,OAAA;QACEyC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBC,KAAK,EAAEvC,IAAK;QACZwC,QAAQ,EAAGC,CAAC,IAAKxC,OAAO,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFxC,OAAA;QAAQ+C,OAAO,EAAExB,YAAa;QAAAa,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CxC,OAAA;QAAQ+C,OAAO,EAAElB,qBAAsB;QAAAO,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,EAELlC,OAAO,iBACNN,OAAA;MAAKmC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BpC,OAAA;QAAAoC,QAAA,GAAI,kBAAgB,EAAC1B,QAAQ,IAAI,MAAMA,QAAQ,EAAE;MAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvDxC,OAAA;QAAKgD,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAAAb,QAAA,EAC9BnC,YAAY,CAACK,OAAO,CAAC4C,WAAW,CAAC,IAAI;MAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACNxC,OAAA;QAAAoC,QAAA,GAAG,eAAa,EAAC9B,OAAO,CAAC6C,WAAW,EAAC,OAAE;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3CxC,OAAA;QAAAoC,QAAA,GAAG,aAAW,EAAC9B,OAAO,CAAC8C,SAAS,EAAC,OAAK;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACN,EAEAhC,QAAQ,CAAC6C,IAAI,iBACZrD,OAAA;MAAAoC,QAAA,gBACEpC,OAAA;QAAAoC,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBxC,OAAA;QAAKmC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChC5B,QAAQ,CAAC6C,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACtCzD,OAAA;UAAemC,SAAS,EAAC,eAAe;UAAAC,QAAA,gBACtCpC,OAAA;YAAAoC,QAAA,EAAIoB;UAAG;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZxC,OAAA;YAAKgD,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAS,CAAE;YAAAb,QAAA,EAChCnC,YAAY,CAACO,QAAQ,CAAC0C,WAAW,CAACO,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI;UAAG;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eACNxC,OAAA;YAAAoC,QAAA,GACG5B,QAAQ,CAACkD,kBAAkB,CAACD,GAAG,GAAG,CAAC,CAAC,EAAC,UAAK,EAACjD,QAAQ,CAACmD,kBAAkB,CAACF,GAAG,GAAG,CAAC,CAAC,EAAC,OACnF;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,GAPIgB,GAAG;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQR,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrC,EAAA,CA7EQD,GAAG;AAAA0D,EAAA,GAAH1D,GAAG;AA+EZ,eAAeA,GAAG;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}